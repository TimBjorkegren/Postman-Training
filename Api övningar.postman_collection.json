{
	"info": {
		"_postman_id": "17067b17-f800-4596-b7c9-1d25ea76654a",
		"name": "Api övningar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43593995",
		"_collection_link": "https://timbjorkegren-4394261.postman.co/workspace/Tim-Bjorkegren's-Workspace~1c478070-8fa6-443a-8269-c59bbc03b404/collection/43593995-17067b17-f800-4596-b7c9-1d25ea76654a?action=share&source=collection_link&creator=43593995"
	},
	"item": [
		{
			"name": "Get products/categories",
			"item": [
				{
					"name": "Get all products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuskoden ska vara 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Svaret ska vara en array\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Är statuskoden 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Är svaret en array\",function(){\r",
									"    pm.expect(pm.response.json()).to.be.an(\"array\");\r",
									"} )"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get product by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {\r",
									"    const data = pm.response.json();\r",
									"    pm.environment.set(\"product_id\", data.id);\r",
									"    console.log(\"Sparat product_id:\", data.id);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Get all product \"GET\" = Gets all the products with information\n\nGet all categories \"GET\" = Gets all the categories ID and names\n\nGet product by id \"GET\" = Gets a specific product by their id"
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Create a category",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"Games\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				}
			],
			"description": "Create a category \"POST\" = creates a new category"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Create a order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ProductId\": 30,\r\n    \"Quantity\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all orders",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a specifc order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a specifc order by user_id and order_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Totalpris är korrekt\", () => {\r",
									"    const order = pm.response.json();\r",
									"    const expectedTotal = order.price * order.quantity;\r",
									"    pm.expect(order.total).to.equal(expectedTotal);\r",
									"});\r",
									"\r",
									"pm.test(\"Tidstämpel finns och är giltlig\", () => {\r",
									"    const order = pm.response.json();\r",
									"    pm.expect(order).to.have.property(\"createdAt\");\r",
									"    pm.expect(new Date(order.createdAt)).to.be.a(\"Date\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"orders",
								"{{order_id}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Create a order \"POST\" = creates a new order\n\nGet all orders \"GET\" = gets all the orders in the database\n\nGet a specific order \"GET\" = gets a specific order by only the order id\n\nGet a specific order by user id & order id = gets a order with help of user id and order id"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Create a product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"Mario Dumbo\",\r\n    \"Price\": 1099,\r\n    \"CategoryId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product price",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Price\": 699\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Create a product \"POST\" = creates a new product with price, name and category id\n\nUpdate product price \"PATCH\"\n\nDelete a specific product \"DELETE\" = deletes a specifc product with product id"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Login as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuskoden är 200\", () => pm.response.to.have.status(200));\r",
									"\r",
									"pm.test(\"session sparades\", () => {\r",
									"    const sessionCookie = pm.cookies.get(\".Session\");\r",
									"    pm.expect(sessionCookie).to.not.be.undefined;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Email\": \"admin@admin.com\",\r\n    \"Password\": \"admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"Tim\",\r\n    \"Email\": \"tim.bjorkegren@gmail.com\",\r\n    \"Password\": \"hej123\",\r\n    \"RoleId\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Email\": \"tim.bjorkegren@gmail.com\",\r\n    \"Password\": \"hej123\"\r\n}\r\n\r\n//Alla endpoints som jag har tillgång till som \"User\" = \r\n/* \r\n{{base_url}}/products \"GET\" //Get all products\r\n{{base_url}}/categories \"GET\" // Get all categories\r\n{{base_url}}/products/{{product_id}} \"GET\" //GET product by id\r\n*/\r\n\r\n//Alla endpoint som är admin skyddade =\r\n/* \r\n{{base_url}}/products/{{category_id}} \"PATCH\" //Update a product price\r\n{{base_url}}/products/{{product_id}} \"DELETE\" //Delete a specific product\r\n{{base_url}}/categories \"POST\" //Create a category \r\n{{base_url}}/products \"POST\" // Create a product\r\n*/",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			],
			"description": "Login as admin \"POST\" = login as admin with email and password\n\nLogout \"DELETE\" = deletes your current session\n\nCreate a user \"POST\" = create a new user with email, role, password, username\n\nLogin as user \"POST\" = login as a user not admin"
		}
	]
}